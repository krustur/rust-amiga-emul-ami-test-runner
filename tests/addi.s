; ----------------------T----------------------------------

; Path: D:\Amiga\KrustWB3\Output\Dev\github\rust-amiga-emul-ami-test-runner\tests\addi.s
; This file is autogenerated

 ;rts in case this source is run by mistake
 rts

;===========================================

addi_byte_immediate_data_to_data_register_direct
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "addi_byte_immediate_data_to_data_register_direct",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000000

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004321
 dc.l $000000a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000002,$00040000
 dc.b $06,$07,$00,$23

.assert_mem
 ;length,address,ptr
 dc.l $00000000

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$00004344
 dc.l $000000a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $0000 ; -----

.assert_code
 ADDI.B #$23,D7

;===========================================

addi_byte_immediate_data_to_absolute_short
 dc.l .name	; $00
 dc.l .arrange_mem	; $04
 dc.l .arrange_regs	; $08
 dc.l .arrange_code	; $0c
 dc.l .assert_mem	; $10
 dc.l .assert_regs	; $14
 dc.l .assert_code	; $18

.name
 dc.b "addi_byte_immediate_data_to_absolute_short",0
 even

.arrange_mem
 ;length,address,ptr
 dc.l $00000001,$00004000,.arrange_mem_00004000
 dc.l $00000000

.arrange_mem_00004000
 dc.b $4C
 even

.arrange_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $000000a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $001f ; ENZOC

.arrange_code
 ;length,address
 dc.l $00000003,$00040000
 dc.b $06,$38,$00,$38,$40,$00

.assert_mem
 ;length,address,ptr
 dc.l $00000001,$00004000,.assert_mem_00004000
 dc.l $00000000

.assert_mem_00004000
 dc.b $84
 even

.assert_regs
 ;    D0/A0     D1/A1     D2/A2     D3/A3     D4/A4     D5/A5     D6/A6     D7/A7
 dc.l $000000d0,$000000d1,$000000d2,$000000d3,$000000d4,$000000d5,$000000d6,$0000d7d7
 dc.l $000000a0,$000000a1,$000000a2,$000000a3,$000000a4,$000000a5,$000000a6,$000000a7
 dc.w $000a ; -N-O-

.assert_code
 ADDI.B #$38,($4000).W

